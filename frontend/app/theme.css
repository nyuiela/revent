@import url("https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Use Tailwind's theme system for consistent dark/light mode */
  --app-background: hsl(var(--background));
  --app-foreground: hsl(var(--foreground));
  --app-foreground-muted: hsl(var(--muted-foreground));
  --app-accent: hsl(var(--primary));
  --app-accent-hover: hsl(var(--primary) / 0.9);
  --app-accent-active: hsl(var(--primary) / 0.8);
  --app-accent-light: hsl(var(--primary) / 0.1);
  --app-gray: hsl(var(--muted));
  --app-gray-dark: hsl(var(--muted) / 0.8);
  --app-card-bg: hsl(var(--card) / 0.8);
  --app-card-border: hsl(var(--border));

  /* Events pages with Prism background - use theme colors */
  --events-foreground: hsl(var(--foreground));
  --events-foreground-muted: hsl(var(--muted-foreground));
  --events-card-bg: hsl(var(--card) / 0.1);
  --events-card-border: hsl(var(--border) / 0.5);
  --events-accent: hsl(var(--primary));
  --events-accent-hover: hsl(var(--primary) / 0.9);
}

.mini-app-theme {
  --ock-font-family: "Geist", sans-serif;
  --ock-border-radius: 0.75rem;
  --ock-border-radius-inner: 0.5rem;

  /* Text colors - use theme system */
  --ock-text-inverse: hsl(var(--background));
  --ock-text-foreground: hsl(var(--foreground));
  --ock-text-foreground-muted: hsl(var(--muted-foreground));
  --ock-text-error: hsl(var(--destructive));
  --ock-text-primary: hsl(var(--primary));
  --ock-text-success: #22c55e;
  --ock-text-warning: #f59e0b;
  --ock-text-disabled: hsl(var(--muted-foreground) / 0.5);

  /* Background colors - use theme system */
  --ock-bg-default: hsl(var(--background));
  --ock-bg-default-hover: hsl(var(--muted));
  --ock-bg-default-active: hsl(var(--muted) / 0.8);
  --ock-bg-alternate: hsl(var(--muted));
  --ock-bg-alternate-hover: hsl(var(--muted) / 0.8);
  --ock-bg-alternate-active: hsl(var(--muted) / 0.6);
  --ock-bg-inverse: hsl(var(--foreground));
  --ock-bg-inverse-hover: hsl(var(--foreground) / 0.9);
  --ock-bg-inverse-active: hsl(var(--foreground) / 0.8);
  --ock-bg-primary: hsl(var(--primary));
  --ock-bg-primary-hover: hsl(var(--primary) / 0.9);
  --ock-bg-primary-active: hsl(var(--primary) / 0.8);
  --ock-bg-primary-washed: hsl(var(--primary) / 0.1);
  --ock-bg-primary-disabled: hsl(var(--primary) / 0.5);
  --ock-bg-secondary: hsl(var(--secondary));
  --ock-bg-secondary-hover: hsl(var(--secondary) / 0.8);
  --ock-bg-secondary-active: hsl(var(--secondary) / 0.6);
  --ock-bg-error: hsl(var(--destructive) / 0.1);
  --ock-bg-warning: #fef3c7;
  --ock-bg-success: #dcfce7;
  --ock-bg-default-reverse: hsl(var(--foreground));

  /* Icon colors - use theme system */
  --ock-icon-color-primary: hsl(var(--primary));
  --ock-icon-color-foreground: hsl(var(--foreground));
  --ock-icon-color-foreground-muted: hsl(var(--muted-foreground));
  --ock-icon-color-inverse: hsl(var(--background));
  --ock-icon-color-error: hsl(var(--destructive));
  --ock-icon-color-success: #22c55e;
  --ock-icon-color-warning: #f59e0b;

  /* Line colors - use theme system */
  --ock-line-primary: hsl(var(--primary));
  --ock-line-default: hsl(var(--border));
  --ock-line-heavy: hsl(var(--muted-foreground));
  --ock-line-inverse: hsl(var(--border));
}

* {
  touch-action: manipulation;
}

body {
  color: hsl(var(--foreground));
  background: hsl(var(--background));
  font-family: var(--font-plus-jakarta, var(--font-geist-sans)), sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

.animate-fade-in {
  animation: fadeIn 0.5s ease-in-out;
}

.animate-fade-out {
  animation: fadeOut 3s forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
